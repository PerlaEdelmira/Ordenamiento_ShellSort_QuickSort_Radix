class MetodosDeOrdenamiento{

public void ordenamientoShellsort(int A[]) {
		int salto, aux, i;
		int comparaciones=0, recorridos=0, intercambios=0;
		boolean cambios;
		long tInicio, tFin;
		tInicio = System.nanoTime();
		
		for(salto = A.length/2; salto !=0; salto/=2) {
			cambios = true;
			recorridos++;
			while (cambios) { // mientras se intercambia algun elemento
				cambios = false;
				for(i = salto; i<A.length; i++) {	//se da una pasada
					if(A[i - salto] > A[i]) {			//Y si estan desordenados
						intercambios++;
						aux = A[i];   				//se ordenan
						A[i] = A[i - salto];
						A[i - salto] = aux;
						cambios = true;			// y se marca como cambio
					}
					comparaciones++;
				}
			}
		}
		mostrarVector(A);
		tFin = System.nanoTime();
		System.out.println("-------> Tiempo de Procesamiento: " + (tFin - tInicio));
		System.out.println("-------> Recorridos: " + recorridos );
		System.out.println("-------> Intercambios: " + intercambios );
		System.out.println("-------> Comparaciones: " + comparaciones);
	}
	public void mostrarVector(int numeros[]) {
		System.out.println(Arrays.toString(numeros));
	}
}
public class EjemploMetodosORdenamiento {
	public static void main(String[] args) {
	
	}
}
